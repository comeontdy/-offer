题目描述
输入某二叉树的前序遍历和中序遍历的结果，请重建出该二叉树。
假设输入的前序遍历和中序遍历的结果中都不含重复的数字。
例如输入前序遍历序列{1,2,4,7,3,5,6,8}和中序遍历序列{4,7,2,1,5,3,8,6}，则重建二叉树并返回。

思想：
前序遍历的时候，第一个是root，中序遍历的时候，root前面是左子树，后面是右子树，递归左右子树

# -*- coding:utf-8 -*-
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None
class Solution:
    # 返回构造的TreeNode根节点
    def reConstructBinaryTree(self, pre, tin):
        # write code here
        #root = None
        if len(pre) == 0:
            return None
        i = 0
        root = TreeNode(pre[0])
        for i in range(len(tin)):
            if tin[i] == pre[0]:
                break
        l_tin = tin[:i]
        r_tin = tin[i+1:]
        l_pre = pre[1:i+1]
        r_pre = pre[i+1:]
        root.left = self.reConstructBinaryTree(l_pre,l_tin)
        root.right = self.reConstructBinaryTree(r_pre,r_tin)
        return root
