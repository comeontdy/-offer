题目描述
请实现一个函数，用来判断一颗二叉树是不是对称的。注意，如果一个二叉树同此二叉树的镜像是同样的，定义其为对称的。

思路：递归判断当前节点和左右子节点是不是对称的

# -*- coding:utf-8 -*-
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None
class Solution:
    def isSymmetrical(self, pRoot):
        # write code here
        if not pRoot:
            return True
        return self.judge(pRoot.left,pRoot.right)
        
    def judge(self,left,right):
        if not left:
            return not right
        if not right:
            return False
        if left.val != right.val:
            return False
        
        return self.judge(left.left,right.right) and self.judge(left.right,right.left)
