题目描述
输入一个正整数数组，把数组里所有数字拼接起来排成一个数，打印能拼接出的所有数字中最小的一个。
例如输入数组{3，32，321}，则打印出这三个数字能排成的最小数字为321323。

思想：构造比较器cmp
自定义一个比较大小的函数，比较两个字符串s1, s2大小的时候，
先将它们拼接起来，比较s1+s2,和s2+s1那个大，如果s1+s2大，那说明s2应该放前面，所以按这个规则，s2就应该排在s1前面。 ，

# -*- coding:utf-8 -*-
class Solution:
    def PrintMinNumber(self, numbers):
        # write code here
        if not numbers:
            return ''
        numbers.sort(lambda a,b : int(''.join([str(a),str(b)])) - int(''.join([str(b),str(a)])))
        res = [str(num) for num in numbers]
        return ''.join(res)
