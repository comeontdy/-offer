题目描述
给定一个数组A[0,1,...,n-1],请构建一个数组B[0,1,...,n-1],其中B中的元素B[i]=A[0]*A[1]*...*A[i-1]*A[i+1]*...*A[n-1]。不能使用除法。

思想：
1.直接python reduce
2.上三角下三角

# -*- coding:utf-8 -*-
#from functools import reduce
class Solution:
    def multiply(self, A):
        # write code here
        '''
        B = []
        for i in range(len(A)):
            tmp = A[:i] + A[i+1:]
            B.append(reduce(lambda x,y : x*y,tmp))
        return B
        '''
        B = [1] * len(A)
        for i in range(1,len(A)):
            B[i] = B[i-1] * A[i-1]
        tmp = 1
        for i in range(len(A)-2,-1,-1):
            tmp *= A[i + 1]
            B[i] *= tmp
        return B
