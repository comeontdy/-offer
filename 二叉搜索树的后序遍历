题目描述
输入一个整数数组，判断该数组是不是某二叉搜索树的后序遍历的结果。如果是则输出Yes,否则输出No。假设输入的数组的任意两个数字都互不相同。

思路：后序遍历，则最后一个是根节点
二叉搜索树的话，根节点左边一定都比根节点小，右边一定都比根节点大，找到第一个比根节点大的树，后面如果有比之小的树，则返回False，否则遍历左右子树
因此可以得出根节点的左右子树，在递归判断左右子树

# -*- coding:utf-8 -*-
class Solution:
    def VerifySquenceOfBST(self, sequence):
        # write code here
        if sequence == None or len(sequence) == 0:
            return False
        
        root = sequence[-1]
        for i in range(len(sequence)):
            if sequence[i] > root:
                break
        for j in range(i,len(sequence)-1):
            if sequence[j] < root:
                return False
        left = True
        if i > 0:
            left = self.VerifySquenceOfBST(sequence[:i])
        right = True
        if i < len(sequence)-1:
            right = self.VerifySquenceOfBST(sequence[i:len(sequence)-1])
        return left and right
            
